import java.util.ArrayList;
import java.util.List;

public class  Game {
	
   Bord[][] borde;
   private static int numberPacgammes =0; //100 food 
   private Bord bloc =new Bord(new Obstacle());
   private Personage_pacman pacman;
   Personage_fantome[] MyFantome=new Personage_fantome[4];
   Personage_fantome fantome;
    //private Movement action;
   static int index=0 ;
   static Direction choisi=Direction.NONE;
   static List<Direction> direction=new ArrayList<>();
   static List<Direction> transition=new ArrayList<>();
   static List<Direction> direction2=new ArrayList<>();
   private void createListRandom() { 
    direction.add(Direction.DOWN);
    direction.add(Direction.LEFT);
    direction.add(Direction.RIGHT);
    direction.add(Direction.UP);
   }
   public Game(){
	   createListRandom();
	   this.borde= new Bord[10][10];
	   addbloc();
	   addPacgamme();
	  
	   }
   
   public Bord getCell(int posX,int posY){
	   return borde[posX][posY];
   }
   
   public void setCellNull(int posX,int posY,Bord b){
	   if(b.getType()==Element.PACGOMME||b.getType()==Element.EMPTY) {
		   borde[posX][posY].setType(Element.EMPTY);
	   }else if(b.getType()==Element.FANTOME){
		   borde[posX][posY].setType(Element.EMPTY);
		   borde[posX][posY].setType(Element.FANTOME);
		   borde[posX][posY].setFantom1(b.getFantom1());
	   }
	   
   }
 
   public void setCell(int posX,int posY,Personage_pacman pacman){
	   borde[posX][posY].setType(Element.EMPTY);
	   borde[posX][posY].setType((Element) pacman.getType());
	   borde[posX][posY].setPacman(pacman);
   }
   
   
  public void  setCellNullF(int posX,int posY, Bord b){
	 
		      if(b.getType()==Element.PACGOMME) {
			   borde[posX][posY].setType(Element.PACGOMME);	
		       borde[posX][posY].setPacgome(b.getMyPacgome());
		      // borde[posX][posY].getMyPacgome().setPosX(posX);
             }
		      else if(b.getType()==Element.PACGOMME) {
            	 borde[posX][posY].setType(Element.PACMAN);
            	 borde[posX][posY].setPacman(b.getPacman());
            	 borde[posX][posY].getPacman().setPosX(posX);
            	// borde[posX][posY].getPacman().setVie();
             }
		      
		      
  }
 
   public void setCellNullFantome(int posX,int posY, Personage_fantome fantome){	
	   borde[posX][posY].setType(Element.FANTOME);
	   borde[posX][posY].setFantom1(fantome);
  
   }
	          
   public void setCellF(int posX,int posY,Personage_fantome fantome){
	   //borde[posX][posY].setType(Element.EMPTY);
	   borde[posX][posY].setType((Element) fantome.getType());
	   borde[posX][posY].setFantom1(fantome);
   }
 
   /*To get Random value of enum */
   static Direction getRandom(){
	 /* return  Direction.values()[(int) (Math.random() * Direction.values().length)];*/
	   
	   if(!(direction.isEmpty())) {
		   index = (int)(Math.random() * direction.size());
		   choisi=direction.get(index);
		    direction.remove(choisi);
		    transition.add(choisi);
			//System.out.println(choisi+"A1");
		//	System.out.println(direction+"A1");
		    if((direction.isEmpty())) {
		    	for( int i=0;i<transition.size();i++) {
		    	   direction2.add(transition.get(i));
		    	   transition.remove(transition.get(i));
		    	}
		    	
		    }
	   }
	   
	   else {
		   
		   index = (int)(Math.random() * direction2.size());
		   choisi=direction2.get(index);
		   direction2.remove(choisi);
		   transition.add(choisi);
			//System.out.print(choisi+"A2");
			//System.out.println(direction+"A2");
		   if((direction2.isEmpty())) {
			   for( int i=0;i<transition.size();i++) {
		    	   direction.add(transition.get(i));
		    	   transition.remove(transition.get(i));
		    	}
			   
		    }
	       
	   }
	  // System.out.println(choisi);
          return choisi;
   }
 
    /**view*/ 
    public void addbloc(){
    	borde[0][4]=bloc;
    	borde[1][1]=bloc;
    	borde[1][7]=bloc;
    	borde[1][6]=bloc;
    	borde[2][2]=bloc;
    	borde[2][3]=bloc;
    	borde[3][5]=bloc;
        //borde[3][8]=bloc;
    	borde[4][1]=bloc;
    	borde[4][2]=bloc;
    	borde[4][7]=bloc;
    	borde[4][3]=bloc;
    	borde[4][5]=bloc;
    	borde[5][5]=bloc;
    	borde[6][1]=bloc;
    	borde[6][3]=bloc;
    	borde[7][3]=bloc;
    	borde[7][4]=bloc;
    	borde[7][6]=bloc;
    	borde[7][7]=bloc;
    	borde[9][3]=bloc;
    	borde[9][7]=bloc;
    	//new
    	borde[2][9]=bloc;
    	borde[6][4]=bloc;
    	borde[2][1]=bloc;
    	borde[2][7]=bloc;
    	borde[3][7]=bloc;
    	borde[4][8]=bloc;
    	borde[4][0]=bloc;
    	//borde[4][6]=bloc;
    	borde[6][9]=bloc;
    	borde[7][1]=bloc;
    	borde[7][9]=bloc;
    	borde[8][9]=bloc;
    	borde[8][1]=bloc;
    }
    
    public void addPacgamme(){
    	for(int i=0;i<borde.length;i++) {
    		for(int j=0;j<borde[i].length;j++) {
   
    			if(i==9 && j==0) {borde[i][j]=new Bord(new Personage_fantome(i,j,1));
    				MyFantome[0]=borde[i][j].getFantom1();
    			    //System.out.println(MyFantome[0].getType()+" MyFantome[0]"+"x:y"+i+j);
    			}
    			
    			if(i==0 && j==9) {borde[i][j]=new Bord(new Personage_fantome(i,j,2));
    			MyFantome[1]=borde[i][j].getFantom1();
    			}
    			if(i==5 && j==5) {borde[i][j]=new Bord(new Personage_fantome(i,j,3));
    			MyFantome[2]=borde[i][j].getFantom1();
    			}
    			else if(i==9 && j==8) {borde[i][j]=new Bord(new Personage_fantome(i,j,4));
    			MyFantome[3]=borde[i][j].getFantom1();
    			}
    			else if(i==5 && j==0) {borde[i][j]=new Bord(new Personage_pacman(i,j));
    			this.pacman=borde[i][j].getPacman();
    			}
    			
    			else if(borde[i][j]==null) {
    				borde[i][j]=new Bord(new MyPacgomme(Pacgomme.BLEU,i,j));
    				numberPacgammes++;
    			}	
    			}
    		}
    }
    
    
    public Boolean afficheBord(){
    	for(int i=0;i<borde.length;i++) {
    		for(int j=0;j<borde[i].length;j++) {
    			switch(borde[i][j].getType())
    			{
    			case PACMAN:
    				//System.out.print(borde[i][j].getType());
    				System.out.print(" PACMAN ");
    				break;
    			case PACGOMME:   				
    				System.out.print(borde[i][j].getMyPacgome()/*.getPacgome()+" "*/);
    				//System.out.print(" ");
					break;   			
    			case OBSTACLE:			
    				//System.out.print(borde[i][j].getType());
    				System.out.print(" OBSTACLE ");
					break;  	
    			case EMPTY:    				
    				//System.out.print(borde[i][j].getType());
    				System.out.print(" EMPTY ");
					break;
    			

    			case FANTOME:    				
    				//System.out.print(borde[i][j].getType());
    				System.out.print(" FANTOME ");
					break;
    			
    			}
    		} 		
    		
    		System.out.println();
    	} 
    	System.out.println();
    	return true;
    }
  
    /**
	 * Fontem movement
	 */
	public Bord moveRightF(Bord b){	//moveDown		
		 fantome =b.getFantom1();
		   int posx=fantome.getPosX();
		   int posy=fantome.getPosY();	
		  // for(int j=posx+1;j<borde.length;j++){
		  int j=posx+1;
		  if( j>=borde.length)return null;
			   if (getNumberPacgammes()<=0)return null;
			   		if((borde[j][posy]).getType()!=Element.OBSTACLE /*&& borde[j][posy].getType()!=Element.FANTOME*/){
			   			/*	return (getCell(fantome.getPosX(),fantome.getPosY()));
			   	     	else{
			   		   if( (borde[j][posy]).getType()==Element.FANTOME)
			   			{
			   				return (getCell(fantome.getPosX(),fantome.getPosY()));
			   					//Personage_fantome rec_avanve=game.borde[j][posy].getFantom1();
			   						//game.setCellNullFantome(j-1,posy,rec_avanve);
			   			}
			   			*/
			   				Bord rec_avanve=borde[j][posy]; 
			   				setCellNullF(j-1,posy,rec_avanve);
			   				if(rec_avanve.getType()==Element.PACGOMME) {
			   					borde[j][posy].getMyPacgome().setPosX(j-1);
			   				}else if(rec_avanve.getType()==Element.PACMAN){
			   					borde[j][posy].getPacman().setPosX(j-1);
			   				}	
			   		     	setCellF(j,posy,fantome);
			   		    	fantome.setPosX(j);
			   			// game.afficheBord();
			   		}/*else
				   break;*/
			   		/*  try {
					Thread.sleep(sleep);								   
				 } catch (InterruptedException e) {
					e.printStackTrace();
				}*/
			   		// repaint(); 	
			   		//}	
			   		return (getCell(fantome.getPosX(),fantome.getPosY())); 
	}
	
	public Bord moveLeftF(Bord b){	//moveDown		
		 fantome =b.getFantom1();
		   int posx=fantome.getPosX();
		   int posy=fantome.getPosY();	
		 // for(int j=posx-1;j>=0;j--){
		   int j=posx-1;
		   if(j<0)return null;
		 
			   if (getNumberPacgammes()==0)return null;
			   if((borde[j][posy]).getType()!=Element.OBSTACLE /*&&(borde[j][posy]).getType()==Element.FANTOME*/){
				   //  int v=j+1;
				  // if(v<game.borde.length-1){
					   //Element rec=game.borde[v+1][posy].getType();
					 //  Element rec_anvance=game.borde[j][posy].getType();
					   //game.setCellNullF(j+1,posy,rec_anvance); 
					 /*  if( (borde[j][posy]).getType()==Element.FANTOME)
						{
						   return (getCell(fantome.getPosX(),fantome.getPosY()));
						    //Personage_fantome rec_avance=game.borde[j][posy].getFantom1();
							 //game.setCellNullFantome(j+1,posy,rec_avance);
							// rec_avance.setPosX(j+1);
						   *///}else {
							Bord rec_anvance=borde[j][posy]; 
							setCellNullF(j+1,posy,rec_anvance); 
								if(rec_anvance.getType()==Element.PACGOMME) {
			   					   borde[j][posy].getMyPacgome().setPosX(j+1);
								}
								else if(rec_anvance.getType()==Element.PACMAN){
									borde[j][posy].getPacman().setPosX(j+1);
								}
							/*if(rec_anvance==Element.PACGOMME) {
								     //(game.borde[j][posy].getMyPacgome()).setPosX(j);*/
								setCellF(j,posy,fantome);
								fantome.setPosX(j);
							   	//game.afficheBord();
						}     //else if(rec_anvance==Element.PACMAN) {
								//game.borde[j][posy].getPacman().setVie();
							     //game.borde[j][posy].getPacman();
							    	//.setPosY(j+1)
						         	//}	//}
				               /* }
					 				else{
					   				game.setCellNullF(v,posy,game.borde[j][posy].getType());
				    			}*/			
			                   // }
			   return (getCell(fantome.getPosX(),fantome.getPosY()));
			
	   }
		public  Bord moveDownF(Bord b){		          
		    fantome =b.getFantom1();
		   int posx=fantome.getPosX();
		   int posy=fantome.getPosY();			 
		  //for(int i=posy+1;i<borde.length;i++){
		   int i=posy+1;
		   if(i>=borde.length)return null;
		   if (getNumberPacgammes()==0)return null;
		   if((borde[posx][i]).getType()!=Element.OBSTACLE /*&&(borde[posx][i]).getType()==Element.FANTOME*/){
					   //Element rec=game.borde[posx][v-1].getType();
				        /* if( (borde[posx][i]).getType()==Element.FANTOME)
					{
					   return (getCell(fantome.getPosX(),fantome.getPosY()));
					  /*  Personage_fantome rec_avance=game.borde[posx][i].getFantom1();
						 game.setCellNullFantome(posx,i-1,rec_avance);*/
					   Bord rec_avence=borde[posx][i];
					   setCellNullF(posx,i-1,rec_avence);
					   
					   if(rec_avence.getType()==Element.PACGOMME) {
	   					   borde[posx][i].getMyPacgome().setPosY(i-1);
	   					}else if(rec_avence.getType()==Element.PACMAN){
	   					 borde[posx][i].getPacman().setPosY(i-1);
	   					 System.out.println(posx+":"+i);
	   					 
	   					}
					   setCellF(posx,i,fantome);
					   fantome.setPosY(i);	   
					}
				   /*}else{
					   game.setCellNullF(posx,v,game.borde[posx+1][i].getType());
				   }*/				  
				   //  game.afficheBord();
			   
			   return (getCell(fantome.getPosX(),fantome.getPosY()));
    }
	
	public  Bord moveUpF(Bord b){	
		
	//	System.out.println(b.getType()+"moveUP");
		    fantome =b.getFantom1();
		   int posx=fantome.getPosX();
		   int posy=fantome.getPosY();			 
		  // for(int i=posy-1;i>=0;i--){
		   int i=posy-1;
		   if(i<0)return null;
		   if (getNumberPacgammes()==0) System.out.print("game Over");
		  /* if( ((borde[posx][i]).getType()==Element.FANTOME) || ((borde[posx][i]).getType()==Element.OBSTACLE)) {
				   return (getCell(fantome.getPosX(),fantome.getPosY()));
		   }*/
			          // if((borde[posx][i]).getType()!=Element.OBSTACLE ){   
			         // Element rec=game.borde[posx][v+1].getType();
					  /*  Personage_fantome rec_avance=game.borde[posx][i].getFantom1();
						 game.setCellNullFantome(posx,i+1,rec_avance);
				      */
		   if(((borde[posx][i]).getType()!=Element.FANTOME) /*&& ((borde[posx][i]).getType()!=Element.OBSTACLE)*/) {
						Bord rec_avence=borde[posx][i];
						setCellNullF(posx,i+1,rec_avence);	
						if(rec_avence.getType()==Element.PACGOMME)
						{
						borde[posx][i].getMyPacgome().setPosX(i+1);
						}else if(rec_avence.getType()==Element.PACMAN) {
								borde[posx][i].getPacman().setPosX(i+1);
						}
					
				   		//game.setCellNullF(posx,v,game.borde[posx+1][i].getType());
				   		
				   		setCellF(posx,i,fantome);
				   		fantome.setPosY(i);
				   		//  game.afficheBord();
		   }    		   
		  return (getCell(fantome.getPosX(),fantome.getPosY()));
			   
    }
	
	  public void moveFantome() {
		  Bord b;
		  Bord c;
		  Bord current;
		//  if(pacman.getVie()<=0)return;
		 
		  for(int i=0;i<MyFantome.length;i++){	
			  int x=MyFantome[i].getPosX();
			  int y=MyFantome[i].getPosY();
		  
		       b=getCell(x,y);
		   //   System.out.println(b.getType()+" b"+"x:y"+x+":"+y);
		    //  if(gameStatus()==false)return;
	    		 current = b;		  
	    		Direction direction=getRandom();/*Direction.LEFT;*/
	    		
	    		switch(direction){
	    		case RIGHT:
						c=moveRightF(current);
	    	  	current=c;
	    	//  	 System.out.println(current.getType()+"curent");
	    	  	// repaint(); 
	    			break;
	    		case LEFT:			
						c=moveLeftF(current);
	    			current=c;
	    		 //repaint();
	    			 break;
	    		case DOWN:	    
	    		//	c=moveLeftF(current);		
					c=moveDownF(current);				 
	    			 current=c;
	    			//	repaint();
	    			 break;
	    		case UP:					
						c=moveUpF(current);
					
	    		 current=c;
	    			//repaint(); 
	    		 break;
	    		}	
		  }
	    }
	  
	  
	public Bord[][] getBorde() {
		// TODO Auto-generated method stub
		return this.borde;
	}
    
	public int getNumberPacgammes(){
		return numberPacgammes;
	}
	public void setNumberPacgammes(){
		 numberPacgammes--;
	}
    
    
    
    }
    
    


    
    
    
    
	

